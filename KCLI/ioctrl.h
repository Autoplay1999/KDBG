#ifndef _IOCTRL_H
#define _IOCTRL_H

#include "global.h"
#include "undoc.h"

#define KDRV_CTRL_DUMP_IMAGES CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0100, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define KDRV_CTRL_DUMP_MODULES CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0101, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define KDRV_CTRL_DUMP_THREADS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0102, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define KDRV_CTRL_DUMP_REGISTERS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0103, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

#define KDRV_CTRL_MEMORY_READ CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0200, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define KDRV_CTRL_MEMORY_WRITE CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0201, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

#define KDRV_CTRL_THREAD_SUSPEND CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0300, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define KDRV_CTRL_THREAD_RESUME CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0301, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

typedef struct _KDRV_REQ_DUMP_IMAGES
{
  ULONG Size;
  PSYSTEM_PROCESS_INFORMATION Images;
} KDRV_REQ_DUMP_IMAGES, * PKDRV_REQ_DUMP_IMAGES;
typedef struct _KDRV_REQ_DUMP_MODULES
{
  ULONG Pid;
  ULONG Size;
  PRTL_PROCESS_MODULES Modules;
} KDRV_REQ_DUMP_MODULES, * PKDRV_REQ_DUMP_MODULES;
typedef struct _KDRV_REQ_DUMP_THREADS
{
  ULONG Pid;
  ULONG Size;
  PSYSTEM_THREAD_INFORMATION Threads;
} KDRV_REQ_DUMP_THREADS, * PKDRV_REQ_DUMP_THREADS;
typedef struct _KDRV_REQ_DUMP_REGISTERS
{
  ULONG Pid;
  ULONG Tid;
  WOW64_CONTEXT Registers;
} KDRV_REQ_DUMP_REGISTERS, * PKDRV_REQ_DUMP_REGISTERS;

typedef struct _KDRV_REQ_MEMORY_READ
{
  ULONG Pid;
  PWCHAR ModuleName;
  PBYTE Buffer;
  ULONG Offset;
  ULONG Size;
} KDRV_REQ_MEMORY_READ, * PKDRV_REQ_MEMORY_READ;
typedef struct _KDRV_REQ_MEMORY_WRITE
{
  ULONG Pid;
  PWCHAR ModuleName;
  PBYTE Buffer;
  ULONG Offset;
  ULONG Size;
} KDRV_REQ_MEMORY_WRITE, * PKDRV_REQ_MEMORY_WRITE;

typedef struct _KDRV_REQ_THREAD_SUSPEND
{
  ULONG Pid;
  ULONG Tid;
} KDRV_REQ_THREAD_SUSPEND, * PKDRV_REQ_THREAD_SUSPEND;
typedef struct _KDRV_REQ_THREAD_RESUME
{
  ULONG Pid;
  ULONG Tid;
} KDRV_REQ_THREAD_RESUME, * PKDRV_REQ_THREAD_RESUME;

#endif